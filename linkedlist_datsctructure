class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkedList:
    def __init__(self):
            self.head=None
    def print(self):
        cur=self.head
        while(cur):
            print(cur.data)
            cur=cur.next
    def Addatbegin(self,data):
        if self.head is None:
            self.head=Node(data)
            return
        else:
            temp=self.head
            self.head=Node(data)
            self.head.next=temp
            return self.head
    def AddatEnd(self,data):
        if self.head is None :
            self.head=Node(data)
            return
        else:
            cur=self.head
            while(cur.next):
                 cur=cur.next
            cur.next=Node(data)
            return
    def Insert(self,data,NewData):
        if self.head is None:
            self.head=Node(NewData)
        else:
            
            cur=self.head
            while (cur.data!=data):
                cur=cur.next
            temp=cur.next
            cur.next=Node(NewData)
            cur.next.next=temp
            return self.head
    def remove(self,data):
        if self.head is None:
            print("No items to remove")
            return
        else:
            cur=self.head
            while(cur.data!=data):
                temp=cur
                cur=cur.next
            temp.next=cur.next
            return self.head
